# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
soyisim <- giris_al("Soyisminizi girin: ")
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
soyisim <- giris_al("Soyisminizi girin: ")
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
soyisim <- giris_al("Soyisminizi girin: ")
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
soyisim <- giris_al("Soyisminizi girin: ")
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: " Mehmet)
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
isim <- params$isim
soyisim <- params$soyisim
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# İsim ve soyisim tanımları (otomatik giriş)
isim <- "Mehmet"
soyisim <- "Senel"
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# İsim ve soyisim tanımları (otomatik giriş)
isim <- "Mehmet"
soyisim <- "Senel"
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
knitr::opts_chunk$set(echo = TRUE)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# İsim ve soyisim tanımları (otomatik giriş)
isim <- "Mehmet"
soyisim <- "Senel"
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
# Rasgele tam sayılardan oluşan kare matris oluştur
set.seed(123) # Tekrar edilebilirlik için
matris <- matrix(sample(1:100, toplam_sesli_harf^2, replace = TRUE),
nrow = toplam_sesli_harf,
ncol = toplam_sesli_harf)
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
# Sesli harfleri sayan fonksiyon
sesli_harf_sayisi <- function(isim) {
# Sadece harf kontrolü
if (!grepl("^[a-zA-Z]+$", isim)) {
stop("Hata: Girdi yalnızca harflerden oluşmalıdır.")
}
sesli_harfler <- c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
toplam <- sum(tolower(unlist(strsplit(isim, ""))) %in% sesli_harfler)
return(toplam)
}
# Kullanıcıdan geçerli isim ve soyisim al
giris_al <- function(metin) {
repeat {
deger <- readline(prompt = metin)
if (grepl("^[a-zA-Z]+$", deger)) {
return(deger)
} else {
cat("Hata: Girdi yalnızca harflerden oluşmalıdır. Lütfen tekrar deneyin.\n")
}
}
}
# İsim ve soyisim tanımları
isim <- giris_al("İsminizi girin: ")
senel
soyisim <- giris_al("Soyisminizi girin: ")
# Sesli harf sayılarını hesapla
toplam_sesli_harf <- sesli_harf_sayisi(isim) + sesli_harf_sayisi(soyisim)
# Rasgele tam sayılardan oluşan kare matris oluştur
set.seed(123) # Tekrar edilebilirlik için
matris <- matrix(sample(1:100, toplam_sesli_harf^2, replace = TRUE),
nrow = toplam_sesli_harf,
ncol = toplam_sesli_harf)
# Sonucu yazdır
print(matris)
# Verilen matrisi tanımlama
A <- matrix(c(31, 67, 14, 69,
79, 42, 25, 91,
51, 50, 90, 57,
14, 43, 91, 92),
nrow = 4, byrow = TRUE)
# Matrisi hesaplayarak özdeğerlerini bulma
eigenvalues <- eigen(A)$values
# İz (trace) hesaplama: özdeğerlerin toplamı
trace_A <- sum(eigenvalues)
# Determinant hesaplama: özdeğerlerin çarpımı
determinant_A <- prod(eigenvalues)
# Sonuçları gösterme
trace_A
determinant_A
# W'nin ters matrisi (W^-1)
W_inv <- matrix(c(1.5, -2.5, -0.5,
-1.75, 3.25, 0.75,
0.5, -0.5, -0.5),
nrow = 3, byrow = TRUE)
View(W_inv)
View(W_inv)
View(W_inv)
